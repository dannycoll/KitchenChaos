name: Unity CI 

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Clone Repo
      uses: actions/checkout@v2

    # Cache unity Library folder from previous builds.
    - name: Restore Unity Library Folder
      uses: actions/cache@v1.1.0
      with:
        path: ./Library
        key: Library-Hex-UNITY_STANDALONE_LINUX
        restore-keys:  |
          Library-Hex-
    
    # Test
    - name: Run Unity Tests
      uses: AnImaginedReality/UntiyTestRunner.Action@v1.6.1 
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        projectPath: ./
        unityVersion: 2019.3.4f1

    - name: Save Test Result Artifacts 
      uses: actions/upload-artifact@v1
      with:
          name: Test results
          path: artifacts
  code-coverage:
      # The type of runner that the job will run on
      name: coverage
      needs: test
      runs-on: ubuntu-latest
      steps:
        - name: Load Test Result Artifacts 
          uses: actions/download-artifact@v1
          with:
              name: Test results
              path: artifacts
        - shell: bash
          run: cat ./artifacts/CodeCoverage/Report/Summary.xml
      
        # Ensure code coverage exceeds required coverage.
        - name: Check Code Coverage
          uses: AnImaginedReality/UnityCodeCoverage.Action@v0.0.4
          with:
            required-coverage: 25
            coverage-file-path: ./artifacts/CodeCoverage/Report/Summary.xml
